from fastapi import APIRouter, HTTPException
from fastapi.responses import StreamingResponse, FileResponse
from models import ProductDemoRequest
from ai_music import AIMusicGenerator
import os
import logging

logger = logging.getLogger(__name__)

router = APIRouter()

SAMPLE_DIR = "samples"
INSTRUMENT_SAMPLES = {
    "s√°o tr√∫c": "sao_truc_demo.wav",
    "ƒë√†n tranh": "dan_tranh_demo.wav",
    "ƒë√†n b·∫ßu": "dan_bau_demo.wav",
    "tr·ªëng c∆°m": "trong_com_demo.wav",
    "ƒë√†n nguy·ªát": "dan_nguyet_demo.wav",
}

# Kh·ªüi t·∫°o AI Generator
try:
    ai_generator = AIMusicGenerator()
except Exception as e:
    logger.error(f"‚ùå L·ªói kh·ªüi t·∫°o AIMusicGenerator: {str(e)}")
    ai_generator = None

@router.post("/")
async def demo_audio(request: ProductDemoRequest):
    """
    API tr·∫£ v·ªÅ demo √¢m thanh nh·∫°c c·ª•
    - N·∫øu use_ai = False v√† c√≥ sample th·∫≠t th√¨ tr·∫£ v·ªÅ file sample
    - N·∫øu use_ai = True ho·∫∑c kh√¥ng c√≥ sample th√¨ d√πng AI generator
    """
    instrument = request.product.lower()

    if not request.use_ai and instrument in INSTRUMENT_SAMPLES:
        file_path = os.path.join(SAMPLE_DIR, INSTRUMENT_SAMPLES[instrument])
        if os.path.exists(file_path):
            logger.info(f"‚úÖ Tr·∫£ file m·∫´u cho {instrument}")
            return FileResponse(
                file_path,
                media_type="audio/wav",
                headers={"Content-Disposition": f"attachment; filename={instrument}_demo.wav"},
            )
        else:
            logger.warning(f"‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file m·∫´u cho {instrument}, chuy·ªÉn sang AI")

    if ai_generator is None:
        raise HTTPException(status_code=500, detail="Tr√¨nh t·∫°o √¢m thanh AI ch∆∞a ƒë∆∞·ª£c kh·ªüi t·∫°o")

    try:
        audio_io = ai_generator.generate(
            instrument=instrument,
            style=request.style,
            duration=request.duration,
        )
        logger.info(f"üé∂ T·∫°o √¢m thanh AI cho {instrument}")
        return StreamingResponse(
            audio_io,
            media_type="audio/wav",
            headers={"Content-Disposition": f"attachment; filename={instrument}_ai_demo.wav"},
        )
    except Exception as e:
        logger.error(f"‚ùå L·ªói t·∫°o √¢m thanh AI: {str(e)}")
        raise HTTPException(status_code=500, detail=f"T·∫°o √¢m thanh th·∫•t b·∫°i: {str(e)}")